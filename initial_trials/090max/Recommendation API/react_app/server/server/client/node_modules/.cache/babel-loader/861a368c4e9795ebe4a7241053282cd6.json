{"ast":null,"code":"import _classCallCheck from\"/home/maxbot/Minor1/recommend/react_app/server/server/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/maxbot/Minor1/recommend/react_app/server/server/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/maxbot/Minor1/recommend/react_app/server/server/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/maxbot/Minor1/recommend/react_app/server/server/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/maxbot/Minor1/recommend/react_app/server/server/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import'./customers.css';var Customers=/*#__PURE__*/function(_Component){_inherits(Customers,_Component);//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       error: null,\n//       isLoaded: false,\n//       customers: []\n//     };\n//   }\n//   componentDidMount() {\n//     fetch('/api/customers')\n//       .then(res => res.json())\n//       .then(\n//         (customers) => {\n//           this.setState({\n//             isLoaded: true,\n//             customers: customers\n//           });\n//         })\n//   }\n// render(){\n//   if(error){\n//     return <div>Error in loading</div>\n//   }else if (!isLoaded) {\n//     return <div>Loading ...</div>\n//   }else{\n//   return (\n//       <div>\n//         <h2>Customers</h2>\n//         <ul>\n//         {customers.map(customer => \n//           <li>{customer.fname} {customer.lname}</li>\n//         )}\n//         </ul>\n//       </div>\n//     );\n//   }\n// }\nfunction Customers(){var _this;_classCallCheck(this,Customers);_this=_possibleConstructorReturn(this,_getPrototypeOf(Customers).call(this));_this.state={error:null,isLoaded:false,customers:[]};return _this;}_createClass(Customers,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;// I will use fake api from jsonplaceholder website\n// this return 100 posts \nfetch('/recommend').then(function(response){return response.json();}).then(// handle the result\nfunction(customers){console.log(customers);var customer;if(!customers){customer=[];}else{customer=customers.data;}_this2.setState({isLoaded:true,// if(!customers.data){\ncustomers:customer// }\n},function(){return console.log('Customers fetched...',customers);});},// Handle error \nfunction(error){_this2.setState({isLoaded:true,error:error});});}},{key:\"render\",value:function render(){// const {error, isLoaded, customers} = this.state;\nif(this.state.error){return React.createElement(\"div\",null,\"Error in loading\");}else if(!this.state.isLoaded){return React.createElement(\"div\",null,\"Loading ...\");}else{return React.createElement(\"div\",null,React.createElement(\"h2\",null,\"Customers\"),React.createElement(\"ul\",null,this.state.customers.map(function(customer){return React.createElement(\"li\",{key:customer.id},customer.firstName,\" \",customer.lastName);})));}}}]);return Customers;}(Component);export default Customers;","map":{"version":3,"sources":["/home/maxbot/Minor1/recommend/react_app/server/server/client/src/components/customers.js"],"names":["React","Component","Customers","state","error","isLoaded","customers","fetch","then","response","json","console","log","customer","data","setState","map","id","firstName","lastName"],"mappings":"ytBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,iBAAP,C,GAEMC,CAAAA,S,mEACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAa,2CACX,6EACA,MAAKC,KAAL,CAAa,CACTC,KAAK,CAAG,IADC,CAETC,QAAQ,CAAG,KAFF,CAGTC,SAAS,CAAG,EAHH,CAAb,CAFW,aAOZ,C,mFAGkB,iBACjB;AACA;AACAC,KAAK,CAAC,YAAD,CAAL,CACCC,IADD,CACO,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADf,EAECF,IAFD,CAGI;AACA,SAACF,SAAD,CAAe,CACXK,OAAO,CAACC,GAAR,CAAYN,SAAZ,EACA,GAAIO,CAAAA,QAAJ,CACA,GAAG,CAACP,SAAJ,CAAc,CACZO,QAAQ,CAAC,EAAT,CACD,CAFD,IAGI,CACFA,QAAQ,CAACP,SAAS,CAACQ,IAAnB,CACD,CACD,MAAI,CAACC,QAAL,CAAc,CACVV,QAAQ,CAAG,IADD,CAEV;AACAC,SAAS,CAACO,QACV;AAJU,CAAd,CAME,iBAAMF,CAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAAoCN,SAApC,CAAN,EANF,EAQH,CArBL,CAsBI;AACA,SAACF,KAAD,CAAW,CACP,MAAI,CAACW,QAAL,CAAc,CACVV,QAAQ,CAAE,IADA,CAEVD,KAAK,CAALA,KAFU,CAAd,EAIH,CA5BL,EA8BD,C,uCACQ,CACP;AACA,GAAG,KAAKD,KAAL,CAAWC,KAAd,CAAoB,CAChB,MAAO,mDAAP,CACH,CAFD,IAEM,IAAI,CAAC,KAAKD,KAAL,CAAWE,QAAhB,CAA0B,CAC5B,MAAO,8CAAP,CACH,CAFK,IAED,CACD,MACI,gCACE,0CADF,CAEE,8BACC,KAAKF,KAAL,CAAWG,SAAX,CAAqBU,GAArB,CAAyB,SAAAH,QAAQ,QACpC,2BAAI,GAAG,CAAEA,QAAQ,CAACI,EAAlB,EAAuBJ,QAAQ,CAACK,SAAhC,KAA4CL,QAAQ,CAACM,QAArD,CADoC,EAAjC,CADD,CAFF,CADJ,CAUH,CAEF,C,uBAtGuBlB,S,EAyGxB,cAAeC,CAAAA,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport './customers.css';\n\nclass Customers extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       error: null,\n//       isLoaded: false,\n//       customers: []\n//     };\n//   }\n\n//   componentDidMount() {\n//     fetch('/api/customers')\n//       .then(res => res.json())\n//       .then(\n//         (customers) => {\n//           this.setState({\n//             isLoaded: true,\n//             customers: customers\n//           });\n//         })\n//   }\n// render(){\n//   if(error){\n//     return <div>Error in loading</div>\n//   }else if (!isLoaded) {\n//     return <div>Loading ...</div>\n//   }else{\n//   return (\n//       <div>\n//         <h2>Customers</h2>\n//         <ul>\n//         {customers.map(customer => \n//           <li>{customer.fname} {customer.lname}</li>\n//         )}\n//         </ul>\n//       </div>\n//     );\n//   }\n// }\nconstructor(){\n  super();\n  this.state = {\n      error : null,\n      isLoaded : false,\n      customers : []   \n  };\n}\n\n\ncomponentDidMount(){\n  // I will use fake api from jsonplaceholder website\n  // this return 100 posts \n  fetch('/recommend')\n  .then( response => response.json())\n  .then(\n      // handle the result\n      (customers) => {\n          console.log(customers)\n          var customer;\n          if(!customers){\n            customer=[]\n          }\n          else{\n            customer=customers.data\n          }\n          this.setState({\n              isLoaded : true,\n              // if(!customers.data){\n              customers:customer\n              // }\n          }\n          , () => console.log('Customers fetched...', customers)\n          );\n      },\n      // Handle error \n      (error) => {\n          this.setState({\n              isLoaded: true,\n              error\n          })\n      },\n  )\n}\nrender() {\n  // const {error, isLoaded, customers} = this.state;\n  if(this.state.error){\n      return <div>Error in loading</div>\n  }else if (!this.state.isLoaded) {\n      return <div>Loading ...</div>\n  }else{\n      return(\n          <div>\n            <h2>Customers</h2>\n            <ul>\n            {this.state.customers.map(customer => \n          <li key={customer.id}>{customer.firstName} {customer.lastName}</li>\n        )}\n            </ul>\n          </div>\n      );\n  }\n\n}\n}\n\nexport default Customers;\n"]},"metadata":{},"sourceType":"module"}