{"ast":null,"code":"var _jsxFileName = \"/home/maxbot/Minor1/recommend/react_app/server/server/client/src/components/customers.js\";\nimport React, { Component } from 'react';\nimport './customers.css';\n\nclass Customers extends Component {\n  //   constructor(props) {\n  //     super(props);\n  //     this.state = {\n  //       error: null,\n  //       isLoaded: false,\n  //       customers: []\n  //     };\n  //   }\n  //   componentDidMount() {\n  //     fetch('/api/customers')\n  //       .then(res => res.json())\n  //       .then(\n  //         (customers) => {\n  //           this.setState({\n  //             isLoaded: true,\n  //             customers: customers\n  //           });\n  //         })\n  //   }\n  // render(){\n  //   if(error){\n  //     return <div>Error in loading</div>\n  //   }else if (!isLoaded) {\n  //     return <div>Loading ...</div>\n  //   }else{\n  //   return (\n  //       <div>\n  //         <h2>Customers</h2>\n  //         <ul>\n  //         {customers.map(customer => \n  //           <li>{customer.fname} {customer.lname}</li>\n  //         )}\n  //         </ul>\n  //       </div>\n  //     );\n  //   }\n  // }\n  constructor() {\n    super();\n    this.state = {\n      error: null,\n      isLoaded: false,\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    // I will use fake api from jsonplaceholder website\n    // this return 100 posts \n    fetch('/recommend').then(response => response.json()).then( // handle the result\n    customers => {\n      console.log(customers);\n      var customer;\n\n      if (!customers) {\n        customer = [];\n      } else {\n        customer = customers;\n      }\n\n      this.setState({\n        isLoaded: true,\n        // if(!customers.data){\n        data: customer // }\n\n      }, () => console.log('Customers fetched...', customers));\n    }, // Handle error \n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    // const {error, isLoaded, customers} = this.state;\n    if (this.state.error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Error in loading\");\n    } else if (!this.state.isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Loading ...\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Customers\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, this.state.data.map(customer => React.createElement(\"li\", {\n        key: customer.customerId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, customer.productId))));\n    }\n  }\n\n}\n\nexport default Customers;","map":{"version":3,"sources":["/home/maxbot/Minor1/recommend/react_app/server/server/client/src/components/customers.js"],"names":["React","Component","Customers","constructor","state","error","isLoaded","data","componentDidMount","fetch","then","response","json","customers","console","log","customer","setState","render","map","customerId","productId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAG,IADC;AAETC,MAAAA,QAAQ,EAAG,KAFF;AAGTC,MAAAA,IAAI,EAAG;AAHE,KAAb;AAKD;;AAGDC,EAAAA,iBAAiB,GAAE;AACjB;AACA;AACAC,IAAAA,KAAK,CAAC,YAAD,CAAL,CACCC,IADD,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EAECF,IAFD,EAGI;AACCG,IAAAA,SAAD,IAAe;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,UAAIG,QAAJ;;AACA,UAAG,CAACH,SAAJ,EAAc;AACZG,QAAAA,QAAQ,GAAC,EAAT;AACD,OAFD,MAGI;AACFA,QAAAA,QAAQ,GAACH,SAAT;AACD;;AACD,WAAKI,QAAL,CAAc;AACVX,QAAAA,QAAQ,EAAG,IADD;AAEV;AACAC,QAAAA,IAAI,EAACS,QAHK,CAIV;;AAJU,OAAd,EAME,MAAMF,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,SAApC,CANR;AAQH,KArBL,EAsBI;AACCR,IAAAA,KAAD,IAAW;AACP,WAAKY,QAAL,CAAc;AACVX,QAAAA,QAAQ,EAAE,IADA;AAEVD,QAAAA;AAFU,OAAd;AAIH,KA5BL;AA8BD;;AACDa,EAAAA,MAAM,GAAG;AACP;AACA,QAAG,KAAKd,KAAL,CAAWC,KAAd,EAAoB;AAChB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACH,KAFD,MAEM,IAAI,CAAC,KAAKD,KAAL,CAAWE,QAAhB,EAA0B;AAC5B,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACH,KAFK,MAED;AACD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKF,KAAL,CAAWG,IAAX,CAAgBY,GAAhB,CAAoBH,QAAQ,IAC/B;AAAI,QAAA,GAAG,EAAEA,QAAQ,CAACI,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BJ,QAAQ,CAACK,SAAxC,CADG,CADD,CAFF,CADJ;AAUH;AAEF;;AAtGiC;;AAyGlC,eAAenB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport './customers.css';\n\nclass Customers extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       error: null,\n//       isLoaded: false,\n//       customers: []\n//     };\n//   }\n\n//   componentDidMount() {\n//     fetch('/api/customers')\n//       .then(res => res.json())\n//       .then(\n//         (customers) => {\n//           this.setState({\n//             isLoaded: true,\n//             customers: customers\n//           });\n//         })\n//   }\n// render(){\n//   if(error){\n//     return <div>Error in loading</div>\n//   }else if (!isLoaded) {\n//     return <div>Loading ...</div>\n//   }else{\n//   return (\n//       <div>\n//         <h2>Customers</h2>\n//         <ul>\n//         {customers.map(customer => \n//           <li>{customer.fname} {customer.lname}</li>\n//         )}\n//         </ul>\n//       </div>\n//     );\n//   }\n// }\nconstructor(){\n  super();\n  this.state = {\n      error : null,\n      isLoaded : false,\n      data : []   \n  };\n}\n\n\ncomponentDidMount(){\n  // I will use fake api from jsonplaceholder website\n  // this return 100 posts \n  fetch('/recommend')\n  .then( response => response.json())\n  .then(\n      // handle the result\n      (customers) => {\n          console.log(customers)\n          var customer;\n          if(!customers){\n            customer=[]\n          }\n          else{\n            customer=customers\n          }\n          this.setState({\n              isLoaded : true,\n              // if(!customers.data){\n              data:customer\n              // }\n          }\n          , () => console.log('Customers fetched...', customers)\n          );\n      },\n      // Handle error \n      (error) => {\n          this.setState({\n              isLoaded: true,\n              error\n          })\n      },\n  )\n}\nrender() {\n  // const {error, isLoaded, customers} = this.state;\n  if(this.state.error){\n      return <div>Error in loading</div>\n  }else if (!this.state.isLoaded) {\n      return <div>Loading ...</div>\n  }else{\n      return(\n          <div>\n            <h2>Customers</h2>\n            <ul>\n            {this.state.data.map(customer => \n          <li key={customer.customerId}>{customer.productId}</li>\n        )}\n            </ul>\n          </div>\n      );\n  }\n\n}\n}\n\nexport default Customers;\n"]},"metadata":{},"sourceType":"module"}