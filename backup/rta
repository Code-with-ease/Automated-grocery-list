# -*- coding: utf-8 -*-
"""rta.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12HRXDt4L8k0Kf3nb9gIaznfVAzG_LELC
"""

from pydrive.auth import GoogleAuth
from pydrive.drive import GoogleDrive
from google.colab import auth
from oauth2client.client import GoogleCredentials

auth.authenticate_user()
gauth = GoogleAuth()
gauth.credentials = GoogleCredentials.get_application_default()
drive = GoogleDrive(gauth)

link = 'https://drive.google.com/open?id=18mX0vHfGORac4PUwlZ0SxzZUtS_4f6KQ'

fluff, id = link.split('=')
print(id)

import pandas as pd
import datetime
downloaded = drive.CreateFile({'id':id})
downloaded.GetContentFile('sales_train_v2(1).csv')
data = pd.read_csv('sales_train_v2(1).csv')
data = data.ix[(data['date'].apply(lambda x: datetime.datetime.strptime(x,'%d.%m.%Y').year > 2017))]
print(data)

!python -m pip install pymongo[srv] --user
!python -m pip install pymongo==3.9.0 --user

import pandas as pd
import json as json
import datetime
from pymongo import MongoClient
from bson import ObjectId
import numpy as np
import time

def obj_dict(obj):
    return obj.__dict__

def sort_dates(dates,quantity):
    date_quant={}
    dates_sorted=[]
    quantity_sorted=[]
    for i in range (0,len(quantity)):
        date_quant[dates[i]]=quantity[i]
    dates_sorted=sorted(dates)
    for i in dates_sorted:
        quantity_sorted.append(date_quant[i])
    return dates_sorted,quantity_sorted


def get_details(data,id,output):

    output["cust_id"]=int(id)
    item_id = data['item_id'].values
    visited_items={}
    
    for i in item_id:
        visited_items[i]=0

    output["items"]=[]
    
    data['date'] = data['date'].apply(lambda x: 
                                    datetime.datetime.strptime(x,'%d.%m.%Y'))
    for items in item_id:
        if(visited_items[items]!=1):
            temp_item_data = data.loc[data["item_id"]==int(items)]
            
            item_obj={}
            item_obj["item_id"]=int(items)
            
            dates = temp_item_data['date'].values
            dates = np.array(dates).astype('datetime64[D]')
            quantity = temp_item_data['item_cnt_day'].values
            dates_sorted,quantity_sorted=sort_dates(dates,quantity)
            
            # item_obj["details"]=[]
            # details_object={}
            item_obj['first_date'] = str(dates_sorted[0])
            item_obj["last_date"] = str(dates_sorted[-1])
            item_obj["count"] = int(len(dates_sorted))

            gap = (dates_sorted[-1] - dates_sorted[0]).astype('int64')
            if(len(dates_sorted)>1):
              item_obj["avg"] = float(gap/(len(dates_sorted)-1))
            else:
              item_obj["avg"]=0
            output["items"].append(item_obj)
            visited_items[items]=1
    return output



def Insert_customers(data):
    customers = data['shop_id'].values
    visited={}
    for i in customers:
        visited[i]=0
    output=[]
    for cust in customers:
        if(visited[cust]!=1):
      
            customer_obj={}
            temp_data = data.loc[data["shop_id"] == cust]
            customer_obj = get_details(temp_data,cust,customer_obj)
            output.append(customer_obj)
            visited[cust]=1

    return output
    

# for customers collection
customers_dict = []
client = MongoClient('mongodb+srv://test:test@cluster0-12rwi.azure.mongodb.net/test?retryWrites=true&w=majority')
db = client.get_database('shop_list')
rta = db.rta

output_data=[]
output_data=Insert_customers(data)
print(output_data)
for i in output_data:
  rta.insert({
        "cust_id":i["cust_id"],
        "item_details":i['items']
    })
